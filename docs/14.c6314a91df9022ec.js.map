{"version":3,"file":"14.c6314a91df9022ec.js","mappings":"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","names":["_c0","MatProgressSpinner_ng_template_0_Template","rf","ctx","i0","ctx_r1","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","_MatProgressSpinnerBase","mixinColor","constructor","_elementRef","this","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","elementRef","animationMode","defaults","super","mode","nativeElement","nodeName","toLowerCase","_value","_diameter","_noopAnimations","_forceAnimations","color","defaultColor","strokeWidth","value","v","Math","max","min","coerceNumberProperty","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","t","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","_t","_determinateCircle","first","hostAttrs","hostVars","hostBindings","inputs","exportAs","features","decls","vars","consts","template","_r0","dependencies","i1","styles","encapsulation","changeDetection","MatProgressSpinnerModule","ɵmod","ɵinj","imports","CommonModule","MatCommonModule","_worker","WeakMap","_ngZone","ExcelWriterWithComlinkWorkerDemoComponent","_classPrivateFieldInitSpec","writable","form","FormGroup","msg","FormControl","nonNullable","validators","Validators","rowsCountControl","_classPrivateFieldSet","getWorkerFromRouterData","inject","NgZone","generatedExcelFile","loading","runInAngularContext","logContext","rowCount","data","i","push","userId","faker","username","email","avatar","password","birthdate","registeredAt","ws","utils","wb","write","compression","console","log","bytesToSize","byteLength","runInJSContext","_classPrivateFieldGet","runOutsideAngular","runInWorkerContext","generateDatas","then","result","onClickDownloadFile","file","Blob","a","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","bytes","sizes","parseInt","floor","pow","toFixed","core","Xpm","standalone","ExcelWriterWithComlinkWorkerDemoComponent_mat_progress_spinner_23_Template","FormsModule","i2","MatButtonModule","i3","MatCardModule","i4","MatFormFieldModule","MatInputModule","MatSliderModule","i5","ReactiveFormsModule","i6"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./src/app/excel-writer-with-comlink-worker-demo/excel-writer-with-comlink-worker-demo.component.html","./src/app/excel-writer-with-comlink-worker-demo/excel-writer-with-comlink-worker-demo.component.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// Boilerplate for applying mixins to MatProgressBar.\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, animationMode, defaults) {\n        super(elementRef);\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n            ? 'indeterminate'\n            : 'determinate';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(v)));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: \"value\", diameter: \"diameter\", strokeWidth: \"strokeWidth\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","<div class=\"center-center wrapper\">\n  <mat-card\n    ><mat-card-header\n      ><mat-card-title\n        >Generate excel with fake data</mat-card-title\n      ></mat-card-header\n    ><mat-card-content\n      ><div style=\"margin-bottom: 0.5rem\">\n        <div><b>Generate rows count</b></div>\n        <mat-slider\n          class=\"w-100\"\n          max=\"1000000\"\n          min=\"0\"\n          step=\"50000\"\n          discrete=\"true\"\n          showTickMarks=\"true\"\n          style=\"max-width: -webkit-fill-available\"\n        >\n          <input matSliderThumb [formControl]=\"rowsCountControl\"\n        /></mat-slider>\n      </div>\n      <div style=\"display: flex; flex-direction: column; gap: 0.5rem\">\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"runInAngularContext()\"\n        >\n          Run in Angular context(freeze browser when rows ~ 1M)</button\n        ><button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"runInJSContext()\"\n        >\n          Run in JS context(maybe freeze browser when rows ~ 1M)</button\n        ><button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"runInWorkerContext()\"\n        >\n          Run in Worker context( :) )\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"primary\"\n          (click)=\"onClickDownloadFile()\"\n          [disabled]=\"generatedExcelFile === null\"\n        >\n          <div style=\"display: flex; gap: 0.2rem; align-items: center\">\n            <div>Download generated file</div>\n            <mat-progress-spinner\n              *ngIf=\"loading\"\n              color=\"accent\"\n              mode=\"indeterminate\"\n              diameter=\"24\"\n            ></mat-progress-spinner>\n          </div>\n        </button></div></mat-card-content\n  ></mat-card>\n</div>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { faker } from '@faker-js/faker';\nimport { utils, write } from 'xlsx';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { getWorkerFromRouterData } from './provider/worker.provider';\n\n@Component({\n  selector: 'app-excel-writer-with-comlink-worker-demo',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule,\n  ],\n  templateUrl: './excel-writer-with-comlink-worker-demo.component.html',\n  styleUrls: ['./excel-writer-with-comlink-worker-demo.component.scss'],\n})\nexport default class ExcelWriterWithComlinkWorkerDemoComponent {\n  readonly form = new FormGroup({\n    msg: new FormControl('', {\n      nonNullable: true,\n      validators: Validators.required,\n    }),\n  });\n  readonly rowsCountControl = new FormControl(1000000, { nonNullable: true });\n  #worker = getWorkerFromRouterData();\n  #ngZone = inject(NgZone);\n  generatedExcelFile: ArrayBuffer | null = null;\n  loading = false;\n\n  runInAngularContext(logContext = 'runInAngularContext') {\n    this.loading = true;\n    const rowCount = this.rowsCountControl.value;\n    const data = [];\n    for (let i = 0; i < rowCount; i++) {\n      data.push({\n        userId: faker.string.uuid(),\n        username: faker.internet.userName(),\n        email: faker.internet.email(),\n        avatar: faker.image.avatar(),\n        password: faker.internet.password(),\n        birthdate: faker.date.birthdate(),\n        registeredAt: faker.date.past(),\n      });\n    }\n\n    /* generate worksheet */\n    const ws = utils.json_to_sheet(data);\n\n    /* generate workbook and add the worksheet */\n    const wb = utils.book_new();\n    utils.book_append_sheet(wb, ws, 'Sheet1');\n    this.generatedExcelFile = write(wb, {\n      type: 'buffer',\n      compression: true,\n    }) as ArrayBuffer;\n    console.log(\n      `[${logContext}]`,\n      'ArrayBuffer result:',\n      this.generatedExcelFile\n    );\n    console.log(\n      `[${logContext}]`,\n      `ArrayBuffer size in mb ~ ${this.bytesToSize(\n        this.generatedExcelFile.byteLength\n      )}`\n    );\n    this.loading = false;\n  }\n\n  runInJSContext() {\n    this.#ngZone.runOutsideAngular(() =>\n      this.runInAngularContext('runInJSContext')\n    );\n  }\n\n  runInWorkerContext() {\n    console.log('call runInWorkerContext');\n    this.loading = true;\n    this.#worker\n      .generateDatas(this.rowsCountControl.value)\n      .then((result: ArrayBuffer) => {\n        console.log('[runInWorkerContext]', 'ArrayBuffer result:', result);\n        console.log(\n          '[runInWorkerContext]',\n          `ArrayBuffer size in mb ~ ${this.bytesToSize(result.byteLength)}`\n        );\n        this.generatedExcelFile = result;\n        this.loading = false;\n      });\n  }\n\n  onClickDownloadFile() {\n    const file = new Blob([this.generatedExcelFile!], {\n      type: 'application/vnd.ms-excel;charset=utf-8',\n    });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(file);\n    a.download = 'generated.xlsx';\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  private bytesToSize(bytes: number) {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) {\n      return 'n/a';\n    }\n    let i = parseInt(`${Math.floor(Math.log(bytes) / Math.log(1024))}`);\n    if (i == 0) {\n      return bytes + ' ' + sizes[i];\n    }\n    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];\n  }\n}\n"],"x_google_ignoreList":[0]}