{"version":3,"file":"700.c6c8ea278cf991a8.js","mappings":"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","names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","ep","target","createProxy","value","serialized","Error","isError","message","name","stack","Object","assign","globalThis","allowedOrigins","addEventListener","callback","ev","data","isAllowedOrigin","origin","allowedOrigin","RegExp","test","console","warn","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","H","transfer","transfers","transferCache","set","undefined","S","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","isMessagePort","constructor","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","Proxy","_target","unregisterProxy","unregister","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","registerProxy","register","myFlat","arr","Array","prototype","concat","processed","v","handler","serializedValue","msg","generateUUID","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","isFunction","UnsubscriptionError","createErrorClass","createImpl","ctorFunc","instance","call","create","_super","errors","this","err","i","arrRemove","item","index","indexOf","splice","Subscription","initialTeardown","closed","_parentage","_finalizers","unsubscribe","isArray","remove","initialFinalizer","e","execFinalizer","push","add","teardown","_a","_hasParent","_addParent","includes","_removeParent","isSubscription","EMPTY","empty","config","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","setTimeout","timeout","args","delegate","clearTimeout","handle","noop","COMPLETE_NOTIFICATION","createNotification","kind","context","Subscriber","destination","super","isStopped","EMPTY_OBSERVER","static","next","complete","SafeSubscriber","handleStoppedNotification","nextNotification","_next","errorNotification","_error","_complete","_bind","Function","fn","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","captureError","errorThrown","reportUnhandledError","notification","subscriber","defaultErrorHandler","observable","identity","x","Observable","subscribe","_subscribe","lift","operator","source","isSubscriber","isObserver","errorContext","cb","isRoot","_trySubscribe","sink","forEach","promiseCtor","getPromiseCtor","reject","Pe","Symbol_observable","pipe","operations","pipeFromArray","fns","input","prev","toPromise","Action","scheduler","work","schedule","state","delay","intervalProvider","setInterval","clearInterval","dateTimestampProvider","now","Date","Scheduler","schedulerActionCtor","async","AsyncScheduler","SchedulerAction","actions","_active","flush","action","execute","shift","AsyncAction","pending","recycleAsyncId","requestAsyncId","_id","_scheduler","_execute","_delay","errorValue","errored","ComlinkWorker","_paramString","_paramFn","paramString","log","paramFn","callParamFn","doSomething","param","withCallback","timer","dueTime","intervalOrScheduler","asyncScheduler","intervalDuration","isScheduler","due","isValidDate","isNaN","n","paramComplexObject"],"sourceRoot":"webpack:///","sources":["./node_modules/comlink/dist/esm/comlink.mjs","./node_modules/rxjs/dist/esm/internal/util/isFunction.js","./node_modules/rxjs/dist/esm/internal/util/UnsubscriptionError.js","./node_modules/rxjs/dist/esm/internal/util/createErrorClass.js","./node_modules/rxjs/dist/esm/internal/util/arrRemove.js","./node_modules/rxjs/dist/esm/internal/Subscription.js","./node_modules/rxjs/dist/esm/internal/config.js","./node_modules/rxjs/dist/esm/internal/scheduler/timeoutProvider.js","./node_modules/rxjs/dist/esm/internal/util/noop.js","./node_modules/rxjs/dist/esm/internal/NotificationFactories.js","./node_modules/rxjs/dist/esm/internal/util/errorContext.js","./node_modules/rxjs/dist/esm/internal/Subscriber.js","./node_modules/rxjs/dist/esm/internal/util/reportUnhandledError.js","./node_modules/rxjs/dist/esm/internal/symbol/observable.js","./node_modules/rxjs/dist/esm/internal/util/identity.js","./node_modules/rxjs/dist/esm/internal/Observable.js","./node_modules/rxjs/dist/esm/internal/util/pipe.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./src/app/comlink-worker-demo/worker/comlink.worker.ts","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n","import { createErrorClass } from './createErrorClass';\nexport const UnsubscriptionError = createErrorClass((_super) => function UnsubscriptionErrorImpl(errors) {\n    _super(this);\n    this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n});\n","export function createErrorClass(createImpl) {\n    const _super = (instance) => {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    const ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n","export function arrRemove(arr, item) {\n    if (arr) {\n        const index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown: initialFinalizer } = this;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _finalizers } = this;\n            if (_finalizers) {\n                this._finalizers = null;\n                for (const finalizer of _finalizers) {\n                    try {\n                        execFinalizer(finalizer);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _finalizers } = this;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n","export const config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n","export const timeoutProvider = {\n    setTimeout(handler, timeout, ...args) {\n        const { delegate } = timeoutProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout(handler, timeout, ...args);\n        }\n        return setTimeout(handler, timeout, ...args);\n    },\n    clearTimeout(handle) {\n        const { delegate } = timeoutProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n","export function noop() { }\n","export const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined))();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind,\n        value,\n        error,\n    };\n}\n","import { config } from '../config';\nlet context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        const isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            const { errorThrown, error } = context;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n","import { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nexport class Subscriber extends Subscription {\n    constructor(destination) {\n        super();\n        this.isStopped = false;\n        if (destination) {\n            this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(this);\n            }\n        }\n        else {\n            this.destination = EMPTY_OBSERVER;\n        }\n    }\n    static create(next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    }\n    next(value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.isStopped = true;\n            super.unsubscribe();\n            this.destination = null;\n        }\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    }\n    _complete() {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    }\n}\nconst _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nclass ConsumerObserver {\n    constructor(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    next(value) {\n        const { partialObserver } = this;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    }\n    error(err) {\n        const { partialObserver } = this;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    }\n    complete() {\n        const { partialObserver } = this;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(observerOrNext, error, complete) {\n        super();\n        let partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            let context;\n            if (this && config.useDeprecatedNextContext) {\n                context = Object.create(observerOrNext);\n                context.unsubscribe = () => this.unsubscribe();\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context),\n                    error: observerOrNext.error && bind(observerOrNext.error, context),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        this.destination = new ConsumerObserver(partialObserver);\n    }\n}\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    const { onStoppedNotification } = config;\n    onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\nexport const EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(() => {\n        const { onUnhandledError } = config;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n","export const observable = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","export function identity(x) {\n    return x;\n}\n","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(() => {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            const subscriber = new SafeSubscriber({\n                next: (value) => {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            this.subscribe(subscriber);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { identity } from './identity';\nexport function pipe(...fns) {\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn) => fn(prev), input);\n    };\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","// Original angular generated code\n// /// <reference lib=\"webworker\" />\n//\n// addEventListener('message', ({ data }) => {\n//   const response = `worker response to ${data}`;\n//   postMessage(response);\n// });\nimport { expose, finalizer } from 'comlink';\nimport { timer } from 'rxjs';\nimport { WorkerDto } from './type/worker.dto';\n\nexport class ComlinkWorker {\n  constructor(\n    private _paramString: string,\n    private _paramFn: (param: string) => string\n  ) {}\n\n  get paramString() {\n    return this._paramString;\n  }\n\n  set paramString(value: string) {\n    console.log('[ComlinkWorker]', 'call setParamString: ', value);\n    this._paramString = value;\n  }\n\n  get paramFn(): (param: string) => string {\n    return this._paramFn;\n  }\n\n  set paramFn(value: (param: string) => string) {\n    this._paramFn = value;\n  }\n\n  callParamFn() {\n    this._paramFn('call');\n  }\n\n  doSomething(param: number) {\n    return param * 5;\n  }\n\n  withCallback(paramFn: (param: number) => void) {\n    timer(2000, 2000).subscribe(paramFn);\n  }\n\n  paramComplexObject(param: WorkerDto) {\n    console.log('[WORKER]', 'paramComplexObject:', param);\n  }\n\n  [finalizer] = () => {\n    debugger;\n  };\n}\n\n// Required!\nexpose(ComlinkWorker);\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27]}